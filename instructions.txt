<><><><><><><><><><><><>Introduction<><><><><><><><><><><><>

Hello! Welcome to Final grade calculator presented to you by:
Angel Pichardo De La Cruz, Jacob Duhaime, Nicholas Faciano and Harry Grenier.

GitHub repo address: https://github.com/Jacob-Duhaime/review_project 

Welcome to the 212 final grade calculator! 

The purpose of this program is to calculate your CSC 2212 final grade based on your performance on assignments, labs, exams,
final project, MEC project. After the program is done calculating your grade, it will spit out a funny message depending on 
your performance in this class. 

<><><><><><><> Pseudocode <><><><><><>
proof of planning: pseudocode (and or flowcharts showing program logic if desired)

main.cpp:
  create user choice vaiable
  output the title 
  output for the user choice
  get the user choice 
  create user list
  make choice grammatically correct
  check is choice is valid
    if not ask for choice again
  constructs userchoice class to begin calculations
  creates a calculated grade variable
  run the grade calulations and set the output to the grade functiom
  checks if grade is over or under the proper threshold 
    outputs the right responce for the grade
   exits main()

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
calc.h:
Create class
store private variables
private variables - user, users list
create datasets for users using grades for each assignment
create dataset for labs
create dataset for term project
create dataset for final exam
create dataset for review project
declare public variables
constructer for calc class
declare a function to get user grades

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
calc.cpp:
main code using data in header to make program "do stuff"
Create constructor using user inputted username
create the pre declared function to get calc grade{
find index of user inputted username
using that index find corresponding scores for each assignment
summation of total assignments and all other course requirements
divide total accumulated points by total possible points
return the final grade that was calculated
}



<><><><><><><><><><><><>Program Description<><><><><><><><><><><><>

The algorithm for this program takes for input the name of the member that you wish to gather their grade from and the 
algorithm will take that name, go into a data set of vectors that has the index of each team member and it will return 
the calculation for that user's grade based on their index. For example, if Bob Smith is the input and Bob Smith equals 
index 1, that will return the data from index 1 from all of the vectors and it will calculate it to a final grade. The 
data set used for this program is static (meaning that it was set manually by a user) but it can be changed and will be
demonstrated in the video showing how to execute our program. Once you input the name of the data member, it will output
a double which has the final calculated grade based on your performance. 

The development for this program was important to our group because it helped all of us learn and grow more as a team.
One of the main things we ran into a lot in the beginning was on how to tackle the creation of this program. There were
many variety of ideas, many ranging from simple, more complex, more advanced, you name it and it was though of during
the drafting period for this program. 

<><><><><><><><><><><><>How to Compile<><><><><><><><><><><><>

>>>>>>>>>>>>GETTING STARTED<<<<<<<<<<<<<<

In order to compile the program, you will have to go the main folder where the program lives. After you download it, feel
free to extract it anywhere into your computer. To compile, you will open an IDE of your choice. You want to change directory
(cd) into the directory where you have extracted the program. For example, if the program was extracted into a folder onto your 
desktop named "calculator", you will input something like this into your terminal: " cd/desktop/calculator ". After your IDE
is in the directory where the program lives, you will then proceed to compile it by typing "g++ calc.cpp main.CPP". If successful, 
this will then create another file called "a.out". 

>>>>>>>>>>>>RUNNING THE PROGRAM<<<<<<<<<<<<<<

After the program has been successfully compiled, we will then proceed to run it. Once again in your terminal, you will want to
type in the following into your terminal: " ./a.out ". This will trigger the program into running. Once the program is running,
it till ask you for a <STRING> input for the name of the user you want to calculate the grade for. For example, you will type in 
"Jacob" or "jacob" in order to get Jacob's data and get his final course grade. (NOTE: This program is only meant to calculate the 
grade of the individuals associated to this group. The next module will show how to change the names and the grades for each of the 
items).

>>>>>>>>>>>>Customizing the program to your liking<<<<<<<<<<<<<<

In order to customize the program by changing the data, adding new members or deleting them, you will have to do a little bit of
tweaking. First, you will have to open our header file which is "calc.h". Once you open it, you can change group member names, change
the grades for assignment and or even add more members and grades to the database. NOTE: Since the program is static assigned values,
that means that if you edit the first name in the vector and you wish to edit the grades, you will have to also edit the first element 
in each vector to reflec tthe accurate grades. If you just add it to the end of the vectors, then there is nothing to worry about. Once 
you are done editing the program, make sure you save all the files (calc.h, calc.cpp and main.cpp). After saving them, re compile the 
program to then run it and your new edits will reflect. 


